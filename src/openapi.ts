import { OpenAPIV3_1 } from 'openapi-types';
import { Type } from '@sinclair/typebox';
import { getSchema } from './utils.js';

export const generateRawPath = () => {
	return {
		get: {
			tags: ['ðŸ“œ Raw contracts'],
			responses: {
				'200': {
					description: 'Succesful response will output the zencode verbatim contract',
					content: { 'text/plain': { schema: Type.String() } }
				}
			}
		}
	};
};

export const generateAppletPath = () => {
	return {
		get: {
			tags: ['ðŸ“± Generated applets'],
			responses: {
				'200': {
					description: 'Generated applet on the fly based on the contract introspection',
					content: { 'text/html': { schema: Type.String() } }
				}
			}
		}
	};
};

export const generatePath = async (contract: string) => {
	const schema = await getSchema(contract);
	const getParams = schema.required.map((n: string) => {
		return {
			name: n,
			in: 'query',
			description: `The ${n}`,
			required: true,
			schema: { type: 'string' }
		};
	});

	return {
		post: {
			description: contract.replaceAll('\n', '\n\n'),
			tags: ['ðŸ“‘ Endpoints'],
			requestBody: {
				content: {
					'application/json': {
						schema: schema
					}
				}
			},
			responses: {
				'200': {
					description: 'The zencode execution output, splitted by newline',
					content: {
						'application/json': {
							schema: Type.Object({
								output: Type.Array(Type.String())
							})
						}
					}
				},
				'500': {
					description: 'Zenroom execution error',
					content: { 'application/json': { schema: Type.Array(Type.String()) } }
				}
			}
		},
		get: {
			description: contract.replaceAll('\n', '\n\n'),
			tags: ['ðŸ“‘ Endpoints'],
			parameters: getParams,
			responses: {
				'200': {
					description: 'The zencode execution output, splitted by newline',
					content: {
						'application/json': {
							schema: Type.Object({
								output: Type.Array(Type.String())
							})
						}
					}
				},
				'500': {
					description: 'Zenroom execution error',
					content: { 'application/json': { schema: Type.Array(Type.String()) } }
				}
			}
		}
	};
};

export const definition: Partial<OpenAPIV3_1.Document> = {
	openapi: '3.1.0',
	paths: {},
	info: {
		title: 'noË‘codeË‘room',
		version: '1.0.0',
		description: `## Create Restful api from zencode smart contracts with no code!

This is a simple API autogenerated from a folder within your server.

To add new endpoints you should add new zencode contracts in the directory.

**NB** The files should be in form of \`endpoint.zen\` then your contract will run on \`/endpoint\``,
		termsOfService: 'https://forkbomb.solutions/privacy-policy/',
		contact: {
			email: 'info@forkbomb.eu',
			name: 'Forkbomb BV',
			url: 'https://forkbomb.solutions'
		},
		license: {
			name: 'GNU Affero General Public License v3.0 or later',
			url: 'https://www.gnu.org/licenses/agpl-3.0'
		}
	},
	tags: [
		{
			name: 'ðŸ“‘ Endpoints',
			description: 'The endpoints of your API generated over the zencode smart contracts'
		},
		{
			name: 'ðŸ“± Generated applets',
			description: 'The generated UI app of your contracts introspection'
		},
		{
			name: 'ðŸ“œ Raw contracts',
			description: 'Sometimes you just need to see the contract you are executing'
		}
	]
};
